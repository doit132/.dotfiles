### add proxy begin
# is running in wsl
# if [[ $(grep -i Microsoft /proc/version) ]]; then
#
# CURRENT_ENV=WSL
# echo "Current environment is wsl2"
#
# export host_ip=$(cat /etc/resolv.conf |grep "nameserver" |cut -f 2 -d " ") # 获取ip地址
# export socks_hostport=7890
# export http_hostport=7890
# alias proxy='
#     export https_proxy="http://${host_ip}:${http_hostport}"
#     export http_proxy="http://${host_ip}:${http_hostport}"
#     export ALL_PROXY="socks5://${host_ip}:${socks_hostport}"
#     export all_proxy="socks5://${host_ip}:${socks_hostport}"
# '
# alias unproxy='
#     unset ALL_PROXY
#     unset https_proxy
#     unset http_proxy
#     unset all_proxy
# '
# alias echoproxy='
#     echo $ALL_PROXY
#     echo $all_proxy
#     echo $https_proxy
#     echo $http_proxy
# '
# # proxy
# # echoproxy
# fi

# if [[ $(grep -i Microsoft /proc/version) ]]; then
# proxy
# echoproxy
# fi

# is running in virtural-machine
if [[ none != `systemd-detect-virt` && $CURRENT_ENV -ne WSL ]]; then
    echo "running in vir"

fi
### add proxy end

export RUSTUP_DIST_SERVER="https://rsproxy.cn"
export RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
export PATH="$HOME/.cargo/bin:$PATH"


# windows 路径环境变量
export "Desktop=/mnt/d/Users/Desktop/"
export "Config=/mnt/d/Users/Document/Config/"
export "Document=/mnt/d/Users/Documents/"

###  交叉编译工具链相关环境变量配置
# 预编译相关的环境变量 
export "C_INCLUDE_PATH=/usr/local/arm/include/freetype-2.4.10/include:$C_INCLUDE_PATH"
export "C_INCLUDE_PATH=/usr/local/arm/include/freetype-2.4.10/include/freetype2:$C_INCLUDE_PATH"
export "CPLUS_INCLUDE_PATH=/usr/local/arm/include/freetype-2.4.10/include:$CPLUS_INCLUDE_PATH"
# 编译器相关的环境变量
export ARCH=arm
export CROSS_COMPILE=arm-buildroot-linux-gnueabihf-

#### export cross_compiler path env begin
export PATH="$PATH:/usr/local/arm/bin/arm-buildroot-linux-gnueabihf_sdk-buildroot/bin"
# export PATH="$PATH:/usr/local/arm/bin/gcc-linaro-5.5.0-2017.10-x86_64_arm-linux-gnueabi/bin"
# export PATH="$PATH:/usr/local/arm/bin/gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu/bin"
# export PATH="$PATH:/usr/local/arm/bin/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabi/bin"
# ARM_CROSS_COMPILER_PATH_REG_PATTERN=":\/usr\/local\/arm\/gcc-.*?\/bin"
# alias removecrosscompilerpath='echo $PATH | sed -e "s/$ARM_CROSS_COMPILER_PATH_REG_PATTERN//g"'
#### export cross_compiler path env end

# 检查 nvim 命令是否存在
if command -v nvim >/dev/null 2>&1; then
  alias nv='nvim'
elif command -v vim >/dev/null 2>&1; then
  echo "nvim command not install"
  alias nv='vim'
else
  echo "vim command not install"
  alias nv='vi'
fi

# 检查 exa 命令是否存在
if command -v exa >/dev/null 2>&1; then
  alias ls='exa'
else
  echo "exa command not install, you can use: 'sudo apt-get install exa -y' to install"
  alias ls='ls'
fi
alias ll="ls -l"
alias la="ls -a"
alias lla="ls -al"
alias lg=lazygit
alias mk="mkdir -p"
# 检查 bat 命令是否存在
if command -v batcat >/dev/null 2>&1; then
  alias cat="batcat"
else
  echo "batcat command not install, you can use: 'sudo apt-get install bat -y' to install"
  alias cat="cat"
fi
alias install="sudo apt install -y"
alias ..="cd .."
alias ...="cd .. && cd .."
alias ....="cd .. && cd .. && cd .."
# 检查 joshuto 命令是否存在
if command -v joshuto >/dev/null 2>&1; then
  alias ra="joshuto"
elif command -v ranger >/dev/null 2>&1; then
  alias ra="ranger"
fi
alias sudo='sudo env PATH=$PATH'

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Created by newuser for 5.8.1

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

# ==== 加载插件 ====
# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode depth"1" for \
      zdharma-continuum/zinit-annex-as-monitor \
      zdharma-continuum/zinit-annex-bin-gem-node \
      zdharma-continuum/zinit-annex-patch-dl \
      zdharma-continuum/zinit-annex-rust


zinit wait="0" lucid light-mode for \
    hlissner/zsh-autopair \
    hchbaw/zce.zsh \
    Aloxaf/gencomp \
    cloneopts="--branch zsqlite" Aloxaf/zsh-histdb \
    wfxr/forgit

# the first call of zsh-z is slow in HDD, so call it in advance
zinit ice wait="0" lucid atload="zshz >/dev/null"
zinit wait lucid light-mode depth"1" for \
    zsh-users/zsh-history-substring-search \
    agkozak/zsh-z
    
# Git extras
zinit ice wait lucid as"program" pick"$ZPFX/bin/git-*" src"etc/git-extras-completion.zsh" make"PREFIX=$ZPFX"
zinit light tj/git-extras

zinit wait="1" lucid for \
    OMZL::clipboard.zsh \
    OMZL::git.zsh \
    OMZL::history.zsh \
    OMZL::key-bindings.zsh \
    OMZP::systemd/systemd.plugin.zsh \
    OMZP::sudo/sudo.plugin.zsh \
    OMZP::git/git.plugin.zsh \

zinit as="completion" for \
    OMZP::fd/_fd

# Completion enhancements
zinit wait lucid depth"1" for \
      atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
      zdharma-continuum/fast-syntax-highlighting \
      blockf \
      zsh-users/zsh-completions \
      atload"!_zsh_autosuggest_start" \
      zsh-users/zsh-autosuggestions

zinit light Aloxaf/fzf-tab
# FZF: fuzzy finder
zinit ice wait lucid from"gh-r" nocompile src'key-bindings.zsh' sbin \
      dl'https://raw.githubusercontent.com/junegunn/fzf/master/shell/completion.zsh -> _fzf_completion;
         https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.zsh -> key-bindings.zsh;
         https://raw.githubusercontent.com/junegunn/fzf/master/man/man1/fzf-tmux.1 -> $ZPFX/share/man/man1/fzf-tmux.1;
         https://raw.githubusercontent.com/junegunn/fzf/master/man/man1/fzf.1 -> $ZPFX/share/man/man1/fzf.1'
zinit light junegunn/fzf

zpcompinit; zpcdreplay

### 加载主题
zinit ice depth=1; zinit light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ==== 配置插件 ====
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}'
zstyle ':completion:complete:*:options' sort false

# 补全忽略大小写, 下面的设置是上面设置未启用的时候发挥作用的
#autoload -Uz compinit && compinit -u
#zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'

# == fzf-tab
zstyle ':fzf-tab:complete:_zlua:*' query-string input
zstyle ':fzf-tab:complete:kill:argument-rest' fzf-preview 'ps --pid=$word -o cmd --no-headers -w -w'
zstyle ':fzf-tab:complete:kill:argument-rest' fzf-flags '--preview-window=down:3:wrap'
zstyle ':fzf-tab:complete:kill:*' popup-pad 0 3
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
zstyle ':fzf-tab:complete:cd:*' popup-pad 30 0
zstyle ":fzf-tab:*" fzf-flags --color=bg+:23
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
zstyle ':fzf-tab:*' switch-group ',' '.'
zstyle ":completion:*:git-checkout:*" sort false
zstyle ':completion:*' file-sort modification
zstyle ':completion:*:exa' sort false
zstyle ':completion:files' sort false

# == zsh-z plugin
ZSHZ_DATA=~/.z

# == forgit
forgit_add=gai
forgit_diff=gdi
forgit_log=glgi

# == zce.zsh
zstyle ':zce:*' keys 'asdghklqwertyuiopzxcvbnmfj;23456789'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

